services:
  api:
    build:
      context: .
    image: demo-api:latest
    container_name: demo_api
    ports:
      - "8000:8000"
    environment:
      - MODEL_DIR=/app/model
      # add more envs as needed
    volumes:
      - ./model:/app/model:ro
    healthcheck:
      test: ["CMD", "curl", "-fsS", "http://localhost:8000/docs"]
      interval: 10s
      timeout: 5s
      retries: 5
    restart: unless-stopped

  frontend:
    image: nginx:alpine
    container_name: demo_frontend
    depends_on:
      api:
        condition: service_healthy
    ports:
      - "8080:80"
    volumes:
      - ./frontend:/usr/share/nginx/html:ro
    # Optional: proxy API (if your index.html fetches /api/*)
    # Add a simple nginx.conf and mount it:
    # - ./frontend/nginx.conf:/etc/nginx/conf.d/default.conf:ro
    restart: unless-stopped

  cli:
    build:
      context: .
    image: demo-cli:latest
    container_name: demo_cli
    tty: true
    stdin_open: true
    working_dir: /app
    volumes:
      - ./model:/app/model:ro
      - ./cli/user_data:/app/cli/user_data
      - /c/Users/BBY/Desktop/sooka:/data
    environment:
      - API_URL=http://api:8000/predict
    command: ["python", "-m", "cli.main"]
    profiles: ["cli"]
